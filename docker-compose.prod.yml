version: '3.5'

services:
    postgres:
        restart: always
        image: 'postgres:10.0'
        env_file:
            - '.env_prod'
        volumes:
            - 'postgres:/var/lib/postgresql/data'

    redis:
        restart: always
        image: 'redis:3.2.11-alpine'
        command: redis-server --requirepass nN7-rgu-z7H-auS
        volumes:
            - 'redis:/var/lib/redis/data'

    website:
        restart: always
        build: .
        command: >
            gunicorn -c "python:config.gunicorn"
            --reload
            "fantasyapp.app:create_app()"
        env_file:
            - '.env_prod'
        volumes:
            - '.:/fantasyapp'
        expose:
            - "8000"
        depends_on:
            - postgres
            - redis

    celery:
        restart: always
        build: .
        command: celery worker -l info -A fantasyapp.blueprints.contact.tasks
        env_file:
            - '.env_prod'
        volumes:
            - '.:/fantasyapp'
        depends_on:
            - postgres
            - redis

    nginx:
        restart: always
        build: ../deploy/nginx
        ports:
            - "80:80"
            - "443:443"
        depends_on:
            - website

volumes:
    postgres:
    redis:
